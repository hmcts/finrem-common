plugins {
    id 'java-library'
    id 'maven-publish'
    id 'checkstyle'
    id 'org.sonarqube' version '3.0'
    id 'org.owasp.dependencycheck' version '7.1.1'
}

def versions = [
    lombok             : '1.18.22',
    hmctsCcdClient     : '4.8.6',
    hmctsIdamJavaClient: '2.0.1',
    hmctsLogging       : '5.1.5',
    pmd                : '6.19.0',
    checkstyle         : '8.32'
]

def buildNumber = System.getenv("RELEASE_VERSION")?.replace("refs/tags/", "") ?: "DEV-SNAPSHOT"
group 'com.github.hmcts'
version buildNumber


repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
}

dependencies {
    implementation 'junit:junit:4.13.1'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'

    implementation group: 'com.github.hmcts', name: 'java-logging', version: versions.hmctsLogging
    implementation group: 'com.github.hmcts', name: 'ccd-client', version: versions.hmctsCcdClient
    implementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.3'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.3.0-rc1'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-openfeign-core', version: '3.0.2'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '3.1.3'
    implementation group: 'io.github.openfeign', name: 'feign-jackson', version: '11.6'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.7.2'


}

sonarqube {
    properties {
        property "sonar.projectKey", "finrem-common"
        property "sonar.exclusions", sonarExclusions.join(', ')
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.dependencyCheck.reportPath", "${project.buildDir}/reports/dependency-check-report.xml"
    }
}

checkstyle {
    maxWarnings = 0
    toolVersion = versions.checkstyle
    configFile = new File(rootDir, 'config/checkstyle/checkstyle.xml')
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        Main(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            artifactId 'finrem-common'
            groupId project.group
            version project.version
        }
    }
}

